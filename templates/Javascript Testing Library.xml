<templateSet group="Javascript Testing Library">
  <template name="rgidv" value="const { getByTestId } = render($2$);&#10;&#10;expect(getByTestId('$1$')).toBeVisible();" description="render getByTestId().toBeVisible()" toReformat="true" toShortenFQNames="true">
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_CLASS" value="false" />
    </context>
  </template>
  <template name="rgid" value="const { getByTestId } = render($2$);&#10;&#10;const element = getByTestId('$1$');&#10;&#10;expect(element)$END$" description="render getByTestId()" toReformat="true" toShortenFQNames="true">
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_CLASS" value="false" />
    </context>
  </template>
  <template name="tbv" value="expect($1$).toBeVisible();" description="expect().toBeVisible()" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_CLASS" value="false" />
    </context>
  </template>
  <template name="gid" value="getByTestId('$1$');" description="getByTestId()" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_CLASS" value="false" />
    </context>
  </template>
  <template name="sde" value="screen.debug($1$)" description="screen debug" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_CLASS" value="false" />
    </context>
  </template>
  <template name="tld" value="import React from 'react';&#10;import { render } from '@testing-library/react';&#10;import { $NAME$ } from './$NAME$';&#10;&#10;describe('$NAME$', () =&gt; {&#10;  describe('when $2$', () =&gt; {&#10;    it('should render', () =&gt; {&#10;      const { getByTestId } = render(&#10;        &lt;$NAME$ data-testid=&quot;$NAME$&quot; /&gt;&#10;      );&#10;&#10;      expect(getByTestId('$NAME$')).toBeVisible();&#10;    });&#10;  });&#10;});&#10;" description="testing library describe" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="substringBefore(fileName(), &quot;.&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="njsx" value="declare global {&#10;  namespace JSX {&#10;    interface IntrinsicElements {&#10;      [key: string]: any;&#10;    }&#10;  }&#10;}" description="namespace jsx" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>