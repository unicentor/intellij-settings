<templateSet group="Javascript zustand">
  <template name="zt" value="$value$: $type$;&#10;set$2$: (value: $type$) =&gt; void;" description="zustand type" toReformat="false" toShortenFQNames="true">
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="capitalize(value)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="zs" value="$name$: $END$,&#10;set$Name$: setStoreValue(set, '$name$', 'set$Name$'),$END$" description="zustand store" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Name" expression="capitalize(name)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="usezs" value="const {&#10;  $state$&#10;} = use$1$(&#10;  ({&#10;    $state1$&#10;  }) =&gt; ({&#10;    $state$&#10;  }),&#10;  shallow$2$&#10;);" description="cusec" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="state1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="state" expression="state1" defaultValue="" alwaysStopAt="false" />
    <variable name="2" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="zcs" value="export const use$Name$Store = createStore('$name$')&lt;$Name$State&gt;(&#10;  (set) =&gt; ({&#10;    $END$&#10;  })&#10;);" description="zustand create store" toReformat="false" toShortenFQNames="true">
    <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="camelCase(Name)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="za" value="$1$: () =&gt; {&#10;  set((state) =&gt; {&#10;    action(state, '$1$');&#10;    &#10;    $end$&#10;  });&#10;}" description="zustand action" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="end" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="zca" value="import { use$Name$Store } from './auth.store';&#10;&#10;export type $Name$Actions = {&#10;  action: () =&gt; void;&#10;};&#10;&#10;const { setState: set } = use$Name$Store;&#10;&#10;export const $name$Actions: $Name$Actions = {&#10;  action: () =&gt; {&#10;    set((state) =&gt; {$END$});&#10;  },&#10;};&#10;" description="zustand create actions" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Name" expression="camelCase(name)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>