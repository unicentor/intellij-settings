<templateSet group="JavaScript">
  <template name="fori" value="for(let $i$ = 0; $i$ &lt; $limit$; $i$++) {&#10;  $END$&#10;}" description="Create iteration loop" toReformat="true" toShortenFQNames="true">
    <variable name="i" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="limit" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="cl" value="console.log($END$)" description="Displays a message in the console" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cle" value="console.error($END$)" description="Displays a message in the console and also includes a stack trace from where the method was called" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="clw" value="console.warn($END$)" description="Displays a message in the console but also displays a yellow warning icon along with the logged message" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cli" value="console.info($END$)" description="Displays a message in the console but also displays a blue information icon along with the logged message" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="clt" value="console.trace($END$)" description="Prints a stack trace from the point where the method was called" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cla" value="console.assert($END$)" description="If the specified expression is false, the message is written to the console along with a stack trace" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="clor" value="console.log($END$) ||" description="console.log() ||" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="me" value="module.exports = $END$;" description="module.exports" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="req" value="require('$module$');" description="require" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cre" value="const $1$ = require('$module$');" description="require" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fe" value="$arr$.forEach((item) =&gt; {&#10;  $END$&#10;});" description="forEach" toReformat="true" toShortenFQNames="true">
    <variable name="arr" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="okfe" value="Object.keys($obj$).forEach((key) =&gt; {&#10;  $END$&#10;});" description="Object.keys().forEach" toReformat="true" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="hop" value="if ($obj$.hasOwnProperty($key$)) {&#10;&#10;}" description="hasOwnProperty" toReformat="true" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="key" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="map" value="$arr$.map(($item$) =&gt; $END$)" description="map" toReformat="true" toShortenFQNames="true">
    <variable name="arr" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ro" value="({&#10;  $END$&#10;})" description="return object" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="sto" value="setTimeout(() =&gt; {&#10;  $body$&#10;}, $delay$);" description="Executes the given function after the specified delay" toReformat="true" toShortenFQNames="true">
    <variable name="body" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="delay" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="sti" value="setInterval(() =&gt; {&#10;  $body$&#10;}, $interval$);" description="Executes the given function at specified intervals" toReformat="true" toShortenFQNames="true">
    <variable name="body" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="interval" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ov" value="Object.values($obj$)$END$" description="Object.values()" toReformat="true" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ok" value="Object.keys($obj$)$END$" description="Object.keys()" toReformat="true" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="c" value="const $1$ = $END$" description="const" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="r" value="return $END$" description="return" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="jp" value="JSON.parse($string$)$END$" description="JSON.parse" toReformat="true" toShortenFQNames="true">
    <variable name="string" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="jst" value="JSON.stringify($obj$)$END$" description="JSON.stringify" toReformat="true" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="pr" value="{...props}" description="Rest {...props}" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tc" value="try {&#10;  $1$&#10;} catch (err) {&#10;  $2$&#10;}" description="try/catch" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="td" value="// TODO" description="TODO" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cfn" value="const $name$ = ($params$) =&gt; $END$" description="Creates a named function" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="prom" value="return new Promise((resolve, reject) =&gt; {&#10;  $END$&#10;});" description="Creates and returns a new Promise" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="apa" value="await Promise.all([$END$])" description="await Promise.all([])" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="a" value="await " description="await" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fof" value="for (let $item$ of $obj$) {&#10;  $END$&#10;}" description="Iterating over property names of iterable objects" toReformat="true" toShortenFQNames="true">
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="aforof" value="for await (let $VAR$ of $ARRAY$) {&#10;  $END$&#10;}" description="Iterate (for..of)" toReformat="true" toShortenFQNames="true">
    <variable name="ARRAY" expression="jsArrayVariable()" defaultValue="&quot;array &quot;" alwaysStopAt="false" />
    <variable name="VAR" expression="jsSuggestVariableName()" defaultValue="&quot;o&quot;" alwaysStopAt="true" />
    <context>
      <option name="ES6_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fin" value="for (let $key$ in $obj$) {&#10;  $END$&#10;}" description="Iterating over property values of iterable objects" toReformat="true" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="&quot;obj&quot;" alwaysStopAt="true" />
    <variable name="key" expression="" defaultValue="&quot;key&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for" value="for (let $INDEX$ = 0; $INDEX$ &lt; $ARRAY$.length; $INDEX$++) {&#10;  const item = $ARRAY$[$INDEX$];&#10;  $END$&#10;}" description="Iterate elements of array" toReformat="true" toShortenFQNames="true">
    <variable name="INDEX" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="ARRAY" expression="" defaultValue="&quot;arr&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="con" value="constructor(props) {&#10; super(props);&#10; $END$&#10;}&#10;" description="Adds a default constructor for the class that contains props as arguments" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_CLASS" value="true" />
    </context>
  </template>
  <template name="dob" value="const { $propertyName$$END$ } = $objectToDestruct$;" description="Creates and assigns a local variable using object destructing" toReformat="true" toShortenFQNames="true">
    <variable name="objectToDestruct" expression="" defaultValue="&quot;props&quot;" alwaysStopAt="true" />
    <variable name="propertyName" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fn" value="($params$) =&gt; $END$" description="Creates an anonymous function" toReformat="true" toShortenFQNames="true">
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="dar" value="const [$propertyName$] = $arrayToDestruct$;" description="Creates and assigns a local variable using array destructing" toReformat="true" toShortenFQNames="true">
    <variable name="arrayToDestruct" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="propertyName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="clo" value="console.log('$obj$', $obj$);" description="Logs property with name" toReformat="true" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="oa" value="Object.assign($END$)" description="Object.values()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="file" value="$1$" description="filename" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="substringBefore(fileName(), &quot;.&quot;)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="intf" value="interface $1$ {&#10;  $END$&#10;}" description="interface" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="find" value="$arr$.find((item) =&gt; $END$)" description="find" toReformat="true" toShortenFQNames="true">
    <variable name="arr" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="mapo" value="$arr$.map(($item$) =&gt; ({&#10;  $END$&#10;})" description="map" toReformat="true" toShortenFQNames="true">
    <variable name="arr" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ejoi" value="export const $1$ = Joi.object&lt;$2$&gt;({$END$})" description="Joi schema" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>